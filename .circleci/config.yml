version: 2

# define defaults for usage same docker image
defaults: &defaults
  working_directory: ~/code
  docker:
    - image: circleci/android:api-28@sha256:e87528d81a9e762d80232e1a6c32a3f374195a7ffa0aa3eb2a594bc166d6ae67
  environment:
    JVM_OPTS: -Xmx4G

jobs:
    decode_json:
        <<: *defaults
        steps:
            - checkout
            - run:
                name: Decode json
                command: echo $GOOGLE_SERVICES_JSON | base64 --decode --ignore-garbage > app/google-services.json
            - persist_to_workspace:
                root: ~/code
                paths:
                    - .

    download_dependencies:
        <<: *defaults
        steps:
            - attach_workspace:
                at: .
            # add permissison avoid failre
            - run:
                name: Chmod permissions
                command: sudo chmod +x ./gradlew
            - restore_cache:
                keys:
                    - jars-cache-v1-{{ checksum "build.gradle" }}-{{ checksum "app/build.gradle" }}
            - run:
                name: Download Dependencies
                command: ./gradlew androidDependencies
            - save_cache:
                paths:
                    - ~/.gradle
                key: jars-cache-v1-{{ checksum "build.gradle" }}-{{ checksum "app/build.gradle" }}

    check:
        <<: *defaults
        steps:
            - attach_workspace:
                at: .
            # for danger
            - restore_cache:
                keys:
                    - gem-cache-v1-{{ arch }}-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
                    - gem-cache-v1-{{ arch }}-{{ .Branch }}
                    - gem-cache-v1
            - run:
                name: Bundle Install
                command: bundle install --path vendor/bundle --clean --jobs=2 --retry=3
            - save_cache:
                key: gem-cache-v1-{{ arch }}-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
                paths:
                    - vendor/bundle
            # Run Tests and store results.
            - run:
                name: Run Tests
                command: ./gradlew lint test
            - run:
                name: Run ktlint
                command: ./gradlew ktlintcheck
            - run:
                name: Run Danger
                command: bundle exec danger
            - store_artifacts:
                path: app/build/reports
                destination: reports
            - store_test_results:
                path: app/build/test-results
            - persist_to_workspace:
                root: ~/code
                paths:
                    - .

    build:
        <<: *defaults
        steps:
            - attach_workspace:
                at: .
            # build
            - run:
                name: Build
                command: ./gradlew assembleDebug
            - store_artifacts:
                path: app/build/outputs/apk/app-debug.apk
                destination: app-debug.apk
            - persist_to_workspace:
                root: ~/code
                paths:
                    - .

    deploy:
        <<: *defaults
        steps:
            - attach_workspace:
                at: .
            # build
            - run:
                name: Build
                command: ./gradlew bundle
            - store_artifacts:
                path: app/build/outputs/bundle/release/app.aab
                destination: app.aab
            - persist_to_workspace:
                root: ~/code
                paths:
                    - .

workflows:
    version: 2
    build:
        jobs:
            - decode_json
            - download_dependencies
            - build:
                requires:
                    - decode_json
                    - download_dependencies
                filters:
                    branches:
                        only:
                            - master
                            - develop
                            - /feature\/.*/
                            - /hotfix\/.*/
            - check:
                requires:
                    - decode_json
                    - download_dependencies
                    - build
            - deploy:
                requires:
                    - decode_json
                    - download_dependencies
                    - build
                    - check
                filters:
                    branches:
                        only: master


